@use "@scss/variabel" as *;
@use "@scss/mixin" as *;

.radio_input_container {
	color: $var-color-hell-red;
	transition: background-color $var-transition-time-xs;
	height: fit-content;
	cursor: pointer;

	&:has(div > input:checked) .radio_input_checkmark::after{
		transform: $var-translate-center-center scale(1);
		transition: transform $var-transition-time-xs;
	}

	.radio_input_checkmark {
		width: $var-size-m;
		height: $var-size-m;
		border: 1px solid $var-color-white-hight-transition;
		border-radius: 50%;
		position: relative;

		&::after {
			content: "";
			@include abs-bottom-left(-20%, 50%, 1, $var-size-xs, $var-size-xs);
			transform: $var-translate-center-center scale(0);
			transition: transform $var-transition-time-xs;
			background-color: #ffffff;
			border-radius: 50%;
		}
	}

	.radio_input_description {
		color: $var-color-white-hight-transition;
		font-size: $var-font-m;
	}
}

.radio_input_container_with_error {
	border: 1px solid $var-color-hell-red !important;

	.radio_input_checkmark {
		border: 1px solid $var-color-hell-red !important;
	}

	& > div > p {
		color: $var-color-hell-red;
	}
}

// Used when when description is passed.
.radio_input_container_bordered {
	border: $var-border-white-hight-transparent;
	padding: $var-padding-l;
	box-shadow: $var-box-shadow-container;
}

.radio_input_container_background_animation {
	&:has(div > input:checked) {
		background-color: $var-color-black-hight-transparent;
		transition: background-color $var-transition-time-xs;
	}
}